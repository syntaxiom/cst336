{"version":3,"sources":["Components/NoteLetter.js","Components/NoteAccidentals.js","Components/Note.js","App.js","serviceWorker.js","index.js"],"names":["NoteLetter","handleToggle","event","_this","props","update","target","checked","react_default","a","createElement","className","index_es","control","color","onChange","this","label","name","Component","NoteAccidentals","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleChange","setState","selected","value","state","Note","octaveChange","octave","setNotation","activated","notation","accidental","_this2","_this3","_this4","item","NoteLetter_NoteLetter","activateChange","bind","NoteAccidentals_NoteAccidentals","accidentalChange","type","App","mounted","rows","chord","synth","Tone","PolySynth","toMaster","Array","index","triggerAttack","undefined","triggerRelease","variant","onMouseDown","playChord","onMouseUp","stopChord","onMouseLeave","container","direction","justify","alignItems","map","Note_Note","key","chordChange","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fc077f73.chunk.js","sourcesContent":["import {Component} from \"react\";\r\nimport {FormControlLabel, Checkbox} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport './Styles/NoteLetter.css';\r\n\r\nexport default class NoteLetter extends Component {\r\n  handleToggle = event => {\r\n    this.props.update(event.target.checked);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Note-letter\">\r\n        <FormControlLabel\r\n          control={<Checkbox color=\"primary\" onChange={this.handleToggle}/>}\r\n          label={this.props.name}\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNoteLetter.propTypes = {\r\n  name: PropTypes.string,\r\n  update: PropTypes.func\r\n};\r\n","import {Component} from \"react\";\r\nimport {FormControlLabel, Radio} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport './Styles/NoteAccidentals.css';\r\n\r\nexport default class NoteAccidentals extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {selected: ''}\r\n  }\r\n\r\n  handleChange = event => {\r\n    this.setState({selected: event.target.value}, () => {\r\n      this.props.update(this.state.selected);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Note-accidental\">\r\n        <FormControlLabel\r\n          value='b'\r\n          checked={this.state.selected === 'b'}\r\n          onChange={this.handleChange}\r\n          control={<Radio color=\"primary\"/>}\r\n          label='&#9837;'\r\n        />\r\n        <FormControlLabel\r\n          value=''\r\n          checked={this.state.selected === ''}\r\n          onChange={this.handleChange}\r\n          control={<Radio color=\"primary\"/>}\r\n          label='&#9838;'\r\n        />\r\n        <FormControlLabel\r\n          value='#'\r\n          checked={this.state.selected === '#'}\r\n          onChange={this.handleChange}\r\n          control={<Radio color=\"primary\"/>}\r\n          label='&#9839;'\r\n        />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nNoteAccidentals.propTypes = {\r\n  update: PropTypes.func\r\n};\r\n","import {Component} from \"react\";\r\nimport {Grid, TextField} from \"@material-ui/core\";\r\nimport PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport \"./Styles/Note.css\";\r\n\r\nimport NoteLetter from \"./NoteLetter\";\r\nimport NoteAccidentals from \"./NoteAccidentals\";\r\n\r\nexport default class Note extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activated: false,\r\n      notation: '',\r\n      accidental: '',\r\n      octave: 4\r\n    };\r\n  }\r\n\r\n  setNotation() {\r\n    const notation = this.state.activated ? this.props.name + this.state.accidental + this.state.octave : '';\r\n    this.setState({notation: notation}, () => {\r\n      this.props.update(this.state.notation);\r\n    });\r\n  }\r\n\r\n  activateChange(activated) {\r\n    this.setState({activated: activated}, () => {\r\n      this.setNotation();\r\n    })\r\n  }\r\n\r\n  accidentalChange(accidental) {\r\n    this.setState({accidental: accidental}, () => {\r\n      this.setNotation();\r\n    });\r\n  }\r\n\r\n  octaveChange = event => {\r\n    let octave = event.target.value;\r\n\r\n    if (octave > 7) {\r\n      octave = 7;\r\n    }\r\n    if (octave < 1) {\r\n      octave = 1;\r\n    }\r\n\r\n    this.setState({octave: octave}, () => {\r\n      this.setNotation();\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid item className=\"Note\">\r\n        <NoteLetter name={this.props.name} update={this.activateChange.bind(this)}/>\r\n        <NoteAccidentals update={this.accidentalChange.bind(this)}/>\r\n        <TextField type=\"number\" value={this.state.octave} onChange={this.octaveChange}/>\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nNote.propTypes = {\r\n  name: PropTypes.string,\r\n  update: PropTypes.func\r\n};\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport {Button, Grid} from \"@material-ui/core\";\nimport Note from \"./Components/Note\";\nimport Tone from 'tone';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {mounted: false, rows: 1, chord: [], synth: new Tone.PolySynth().toMaster()}\n  }\n\n  componentDidMount() {\n    this.setState({mounted: true, chord: new Array(7)});\n  }\n\n  chordChange(value, index) {\n    let chord = this.state.chord;\n    chord[index] = value;\n    this.setState({chord: chord});\n  }\n\n  playChord() {\n    this.state.synth.triggerAttack(this.state.chord, undefined, 1);\n  }\n\n  stopChord() {\n    this.state.synth.triggerRelease(this.state.chord);\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div className=\"App-header\">\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onMouseDown={() => this.state.mounted ? this.playChord() : null}\n            onMouseUp={() => this.state.mounted ? this.stopChord() : null}\n            onMouseLeave={() => this.state.mounted ? this.stopChord() : null}\n          >\n            Play\n          </Button>\n          <br/>\n          <Grid\n            container\n            direction=\"row\"\n            justify=\"space-evenly\"\n            alignItems=\"center\"\n          >\n            {['C', 'D', 'E', 'F', 'G', 'A', 'B'].map((value, index) => (\n              <Note key={index} name={value} update={(value) => this.chordChange(value, index)}/>\n            ))}\n          </Grid>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}